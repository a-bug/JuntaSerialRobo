[0.000000] (-) TimerEvent: {}
[0.001558] (-) JobUnselected: {'identifier': 'lc_test'}
[0.002465] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.002571] (lc_start) JobQueued: {'identifier': 'lc_start', 'dependencies': OrderedDict()}
[0.002605] (lc_start) JobStarted: {'identifier': 'lc_start'}
[0.031740] (lc_start) JobProgress: {'identifier': 'lc_start', 'progress': 'cmake'}
[0.032304] (lc_start) JobProgress: {'identifier': 'lc_start', 'progress': 'build'}
[0.032962] (lc_start) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/aluno/test_ws/build/lc_start', '--', '-j8', '-l8'], 'cwd': '/home/aluno/test_ws/build/lc_start', 'env': OrderedDict([('KDE_FULL_SESSION', 'true'), ('PROFILEHOME', ''), ('LANGUAGE', ''), ('LC_TIME', 'pt_BR.UTF-8'), ('PAM_KWALLET5_LOGIN', '/run/user/1000/kwallet5.socket'), ('USER', 'aluno'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '1384'), ('XDG_SESSION_TYPE', 'x11'), ('KONSOLE_VERSION', '230400'), ('SHLVL', '2'), ('XCURSOR_SIZE', '24'), ('LD_LIBRARY_PATH', '/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils/lib:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner/lib:/home/aluno/ws_moveit2/install/moveit_visual_tools/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_core/lib:/home/aluno/ws_moveit2/install/moveit_ros_control_interface/lib:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager/lib:/home/aluno/ws_moveit2/install/moveit_setup_assistant/lib:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_controllers/lib:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_framework/lib:/home/aluno/ws_moveit2/install/moveit_servo/lib:/home/aluno/ws_moveit2/install/moveit_ros_visualization/lib:/home/aluno/ws_moveit2/install/moveit_hybrid_planning/lib:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface/lib:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks/lib:/home/aluno/ws_moveit2/install/moveit_ros_warehouse/lib:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction/lib:/home/aluno/ws_moveit2/install/moveit_ros_perception/lib:/home/aluno/ws_moveit2/install/moveit_ros_move_group/lib:/home/aluno/ws_moveit2/install/moveit_planners_ompl/lib:/home/aluno/ws_moveit2/install/moveit_ros_planning/lib:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor/lib:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin/lib:/home/aluno/ws_moveit2/install/moveit_planners_chomp/lib:/home/aluno/ws_moveit2/install/moveit_kinematics/lib:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter/lib:/home/aluno/ws_moveit2/install/chomp_motion_planner/lib:/home/aluno/ws_moveit2/install/moveit_core/lib:/home/aluno/ws_moveit2/install/srdfdom/lib:/home/aluno/ws_moveit2/install/rviz_marker_tools/lib:/home/aluno/ws_moveit2/install/rosparam_shortcuts/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/aluno'), ('KDE_APPLICATIONS_AS_SCOPE', '1'), ('OLDPWD', '/home/aluno'), ('LESS', '-R'), ('DESKTOP_SESSION', 'plasma'), ('ZSH', '/home/aluno/.oh-my-zsh'), ('LSCOLORS', 'Gxfxcxdxbxegedabagacad'), ('GTK_RC_FILES', '/etc/gtk/gtkrc:/home/aluno/.gtkrc:/home/aluno/.config/gtkrc'), ('KCRASH_DUMP_ONLY', '1'), ('KDE_SESSION_VERSION', '5'), ('SHELL_SESSION_ID', 'edbc64cb94b5421fa4f2966571030baf'), ('XDG_SEAT_PATH', '/org/freedesktop/DisplayManager/Seat0'), ('ROS_PYTHON_VERSION', '3'), ('PAGER', 'less'), ('KONSOLE_DBUS_SESSION', '/Sessions/1'), ('LC_CTYPE', 'pt_BR.UTF-8'), ('LC_MONETARY', 'pt_BR.UTF-8'), ('MANAGERPID', '1312'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('SYSTEMD_EXEC_PID', '1499'), ('COLORTERM', 'truecolor'), ('KONSOLE_DBUS_WINDOW', '/Windows/1'), ('QT_EXCLUDE_GENERIC_BEARER', '1'), ('ROS_DISTRO', 'humble'), ('COLCON_PREFIX_PATH', '/home/aluno/test_ws/install:/home/aluno/ws_moveit2/install'), ('LOGNAME', 'aluno'), ('JOURNAL_STREAM', '8:25110'), ('QT_AUTO_SCREEN_SCALE_FACTOR', '0'), ('WINDOWID', '83886093'), ('_', '/home/aluno/.local/bin/colcon'), ('COLORFGBG', '15;0'), ('XDG_SESSION_CLASS', 'user'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '3'), ('ROS_LOCALHOST_ONLY', '0'), ('GTK2_RC_FILES', '/etc/gtk-2.0/gtkrc:/home/aluno/.gtkrc-2.0:/home/aluno/.config/gtkrc-2.0'), ('PATH', '/home/aluno/ws_moveit2/install/moveit_core/bin:/opt/ros/humble/bin:/home/aluno/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('INVOCATION_ID', 'd5e58de3c4434c1b86622d9998d6d495'), ('SESSION_MANAGER', 'local/aluno:@/tmp/.ICE-unix/1452,unix/aluno:/tmp/.ICE-unix/1452'), ('LC_ADDRESS', 'pt_BR.UTF-8'), ('XCURSOR_THEME', 'breeze_cursors'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('XDG_SESSION_PATH', '/org/freedesktop/DisplayManager/Session1'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('LC_TELEPHONE', 'pt_BR.UTF-8'), ('XDG_CURRENT_DESKTOP', 'KDE'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('MOZ_USE_XINPUT2', '1'), ('XAUTHORITY', '/tmp/xauth_pasxgN'), ('XDG_SESSION_DESKTOP', 'KDE'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/tmp/ssh-XXXXXXNncsi3/agent.1326'), ('AMENT_PREFIX_PATH', '/home/aluno/test_ws/install/lc_start:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils:/home/aluno/ws_moveit2/install/moveit_runtime:/home/aluno/ws_moveit2/install/moveit2_tutorials:/home/aluno/ws_moveit2/install/moveit:/home/aluno/ws_moveit2/install/moveit_planners:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner:/home/aluno/ws_moveit2/install/moveit_visual_tools:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities:/home/aluno/ws_moveit2/install/moveit_task_constructor_core:/home/aluno/ws_moveit2/install/moveit_ros_control_interface:/home/aluno/ws_moveit2/install/moveit_plugins:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager:/home/aluno/ws_moveit2/install/moveit_setup_assistant:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins:/home/aluno/ws_moveit2/install/moveit_setup_controllers:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins:/home/aluno/ws_moveit2/install/moveit_setup_framework:/home/aluno/ws_moveit2/install/moveit_servo:/home/aluno/ws_moveit2/install/moveit_ros:/home/aluno/ws_moveit2/install/moveit_ros_visualization:/home/aluno/ws_moveit2/install/moveit_hybrid_planning:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks:/home/aluno/ws_moveit2/install/moveit_ros_warehouse:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction:/home/aluno/ws_moveit2/install/moveit_ros_perception:/home/aluno/ws_moveit2/install/moveit_resources_prbt_pg70_support:/home/aluno/ws_moveit2/install/moveit_resources_prbt_moveit_config:/home/aluno/ws_moveit2/install/moveit_ros_move_group:/home/aluno/ws_moveit2/install/moveit_planners_ompl:/home/aluno/ws_moveit2/install/moveit_ros_planning:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin:/home/aluno/ws_moveit2/install/moveit_planners_chomp:/home/aluno/ws_moveit2/install/moveit_kinematics:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter:/home/aluno/ws_moveit2/install/chomp_motion_planner:/home/aluno/ws_moveit2/install/moveit_core:/home/aluno/ws_moveit2/install/moveit_configs_utils:/home/aluno/ws_moveit2/install/srdfdom:/home/aluno/ws_moveit2/install/rviz_marker_tools:/home/aluno/ws_moveit2/install/rosparam_shortcuts:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs:/home/aluno/ws_moveit2/install/moveit_resources_prbt_support:/home/aluno/ws_moveit2/install/moveit_resources:/home/aluno/ws_moveit2/install/moveit_resources_pr2_description:/home/aluno/ws_moveit2/install/moveit_resources_panda_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_panda_description:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_description:/home/aluno/ws_moveit2/install/moveit_common:/home/aluno/ws_moveit2/install/launch_param_builder:/opt/ros/humble'), ('LC_NAME', 'pt_BR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('COLCON_WS', '/home/aluno/ws_moveit2'), ('KDE_FORK_SLAVES', '1'), ('KONSOLE_DBUS_SERVICE', ':1.190'), ('LC_MEASUREMENT', 'pt_BR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'pt_BR.UTF-8'), ('XDG_VTNR', '2'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/aluno/test_ws/build/lc_start'), ('XDG_CONFIG_DIRS', '/home/aluno/.config/kdedefaults:/etc/xdg/xdg-plasma:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/plasma:/home/aluno/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('LC_NUMERIC', 'pt_BR.UTF-8'), ('PYTHONPATH', '/home/aluno/ws_moveit2/install/moveit_configs_utils/lib/python3.10/site-packages:/home/aluno/ws_moveit2/install/srdfdom/local/lib/python3.10/dist-packages:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs/local/lib/python3.10/dist-packages:/home/aluno/ws_moveit2/install/launch_param_builder/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('KDE_SESSION_UID', '1000'), ('LC_PAPER', 'pt_BR.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/aluno/test_ws/install/lc_start:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils:/home/aluno/ws_moveit2/install/moveit_runtime:/home/aluno/ws_moveit2/install/moveit2_tutorials:/home/aluno/ws_moveit2/install/moveit:/home/aluno/ws_moveit2/install/moveit_planners:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner:/home/aluno/ws_moveit2/install/moveit_visual_tools:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities:/home/aluno/ws_moveit2/install/moveit_task_constructor_core:/home/aluno/ws_moveit2/install/moveit_ros_control_interface:/home/aluno/ws_moveit2/install/moveit_plugins:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager:/home/aluno/ws_moveit2/install/moveit_setup_assistant:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins:/home/aluno/ws_moveit2/install/moveit_setup_controllers:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins:/home/aluno/ws_moveit2/install/moveit_setup_framework:/home/aluno/ws_moveit2/install/moveit_servo:/home/aluno/ws_moveit2/install/moveit_ros:/home/aluno/ws_moveit2/install/moveit_ros_visualization:/home/aluno/ws_moveit2/install/moveit_hybrid_planning:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks:/home/aluno/ws_moveit2/install/moveit_ros_warehouse:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction:/home/aluno/ws_moveit2/install/moveit_ros_perception:/home/aluno/ws_moveit2/install/moveit_resources_prbt_pg70_support:/home/aluno/ws_moveit2/install/moveit_resources_prbt_moveit_config:/home/aluno/ws_moveit2/install/moveit_ros_move_group:/home/aluno/ws_moveit2/install/moveit_planners_ompl:/home/aluno/ws_moveit2/install/moveit_ros_planning:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin:/home/aluno/ws_moveit2/install/moveit_planners_chomp:/home/aluno/ws_moveit2/install/moveit_kinematics:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter:/home/aluno/ws_moveit2/install/chomp_motion_planner:/home/aluno/ws_moveit2/install/moveit_core:/home/aluno/ws_moveit2/install/srdfdom:/home/aluno/ws_moveit2/install/rviz_marker_tools:/home/aluno/ws_moveit2/install/rosparam_shortcuts:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs:/home/aluno/ws_moveit2/install/moveit_resources_prbt_support:/home/aluno/ws_moveit2/install/moveit_resources:/home/aluno/ws_moveit2/install/moveit_resources_pr2_description:/home/aluno/ws_moveit2/install/moveit_resources_panda_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_panda_description:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_description:/home/aluno/ws_moveit2/install/moveit_common:/home/aluno/ws_moveit2/install/moveit_configs_utils:/home/aluno/ws_moveit2/install/launch_param_builder:/opt/ros/humble')]), 'shell': False}
[0.090627] (lc_start) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target listener\x1b[0m\n'}
[0.099792] (-) TimerEvent: {}
[0.115488] (lc_start) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/sr_sub.cpp.o\x1b[0m\n'}
[0.199928] (-) TimerEvent: {}
[0.300302] (-) TimerEvent: {}
[0.400631] (-) TimerEvent: {}
[0.500966] (-) TimerEvent: {}
[0.601381] (-) TimerEvent: {}
[0.701710] (-) TimerEvent: {}
[0.802081] (-) TimerEvent: {}
[0.902420] (-) TimerEvent: {}
[1.002751] (-) TimerEvent: {}
[1.103134] (-) TimerEvent: {}
[1.203511] (-) TimerEvent: {}
[1.303853] (-) TimerEvent: {}
[1.404199] (-) TimerEvent: {}
[1.504529] (-) TimerEvent: {}
[1.604855] (-) TimerEvent: {}
[1.705189] (-) TimerEvent: {}
[1.805510] (-) TimerEvent: {}
[1.905808] (-) TimerEvent: {}
[2.006120] (-) TimerEvent: {}
[2.106469] (-) TimerEvent: {}
[2.206811] (-) TimerEvent: {}
[2.290546] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:\x1b[m\x1b[K In lambda function:\n'}
[2.290750] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:43:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std_msgs::msg::String_<std::allocator<void> >, __gnu_cxx::_S_atomic>::element_type*\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std_msgs::msg::String_<std::allocator<void> >*\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage*\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.290855] (lc_start) StderrLine: {'line': b'   43 |         serializer.deserialize_message(\x1b[01;31m\x1b[Kmsg.get()\x1b[m\x1b[K, &string_msg);\n'}
[2.290931] (lc_start) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K~~~~~~~^~\x1b[m\x1b[K\n'}
[2.291010] (lc_start) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[2.291128] (lc_start) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[Kstd::__shared_ptr<const std_msgs::msg::String_<std::allocator<void> >, __gnu_cxx::_S_atomic>::element_type* {aka const std_msgs::msg::String_<std::allocator<void> >*}\x1b[m\x1b[K\n'}
[2.291197] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:8\x1b[m\x1b[K:\n'}
[2.291261] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/serialization.hpp:75:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::SerializationBase::deserialize_message(const rclcpp::SerializedMessage*, void*) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.291325] (lc_start) StderrLine: {'line': b'   75 |     \x1b[01;36m\x1b[Kconst SerializedMessage * serialized_message\x1b[m\x1b[K, void * ros_message) const;\n'}
[2.291387] (lc_start) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.306951] (-) TimerEvent: {}
[2.407315] (-) TimerEvent: {}
[2.507662] (-) TimerEvent: {}
[2.608010] (-) TimerEvent: {}
[2.702684] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.703121] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.703360] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.703673] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.703885] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.703966] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.704072] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.704186] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.704260] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.704330] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.704398] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:7\x1b[m\x1b[K:\n'}
[2.704466] (lc_start) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.704540] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.704656] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.704742] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.704821] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.704911] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:51:65:\x1b[m\x1b[K   required from here\n'}
[2.704982] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[2.705088] (lc_start) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[2.705154] (lc_start) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.705216] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.705286] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.705348] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.705409] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.705470] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.705531] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.705591] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.705652] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.705712] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.705780] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.705842] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:7\x1b[m\x1b[K:\n'}
[2.705903] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.705996] (lc_start) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[2.706089] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.706148] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.706206] (lc_start) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.706292] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706443] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706510] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706583] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706648] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706724] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706797] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:51:65:\x1b[m\x1b[K   required from here\n'}
[2.706863] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.706924] (lc_start) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[2.706983] (lc_start) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.707067] (lc_start) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.707150] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707215] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707296] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707368] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707432] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:51:65:\x1b[m\x1b[K   required from here\n'}
[2.707490] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707579] (lc_start) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[2.707642] (lc_start) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.707701] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707778] (lc_start) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[2.707838] (lc_start) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.707896] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.707981] (lc_start) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[2.708063] (-) TimerEvent: {}
[2.708177] (lc_start) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.708261] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, Subscriber::Subscriber()::<lambda(std_msgs::msg::String_<std::allocator<void> >::ConstSharedPtr)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.708358] (lc_start) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[2.708421] (lc_start) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.808220] (-) TimerEvent: {}
[2.908557] (-) TimerEvent: {}
[3.008905] (-) TimerEvent: {}
[3.109275] (-) TimerEvent: {}
[3.209616] (-) TimerEvent: {}
[3.309946] (-) TimerEvent: {}
[3.410328] (-) TimerEvent: {}
[3.510661] (-) TimerEvent: {}
[3.611003] (-) TimerEvent: {}
[3.711381] (-) TimerEvent: {}
[3.811736] (-) TimerEvent: {}
[3.912099] (-) TimerEvent: {}
[4.012441] (-) TimerEvent: {}
[4.112805] (-) TimerEvent: {}
[4.213147] (-) TimerEvent: {}
[4.313493] (-) TimerEvent: {}
[4.413830] (-) TimerEvent: {}
[4.514179] (-) TimerEvent: {}
[4.551975] (lc_start) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/listener.dir/build.make:76: CMakeFiles/listener.dir/src/sr_sub.cpp.o] Error 1\n'}
[4.552288] (lc_start) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/listener.dir/all] Error 2\n'}
[4.552466] (lc_start) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[4.554477] (lc_start) CommandEnded: {'returncode': 2}
[4.617551] (-) TimerEvent: {}
[4.627749] (lc_start) JobEnded: {'identifier': 'lc_start', 'rc': 2}
[4.638454] (-) EventReactorShutdown: {}
