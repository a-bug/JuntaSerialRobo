[0.000000] (-) TimerEvent: {}
[0.000484] (-) JobUnselected: {'identifier': 'lc_test'}
[0.000541] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.001538] (lc_start) JobQueued: {'identifier': 'lc_start', 'dependencies': OrderedDict()}
[0.001585] (lc_start) JobStarted: {'identifier': 'lc_start'}
[0.031134] (lc_start) JobProgress: {'identifier': 'lc_start', 'progress': 'cmake'}
[0.031679] (lc_start) JobProgress: {'identifier': 'lc_start', 'progress': 'build'}
[0.032252] (lc_start) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/aluno/test_ws/build/lc_start', '--', '-j8', '-l8'], 'cwd': '/home/aluno/test_ws/build/lc_start', 'env': OrderedDict([('KDE_FULL_SESSION', 'true'), ('PROFILEHOME', ''), ('LANGUAGE', ''), ('LC_TIME', 'pt_BR.UTF-8'), ('PAM_KWALLET5_LOGIN', '/run/user/1000/kwallet5.socket'), ('USER', 'aluno'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '1339'), ('XDG_SESSION_TYPE', 'x11'), ('KONSOLE_VERSION', '230400'), ('SHLVL', '2'), ('XCURSOR_SIZE', '24'), ('LD_LIBRARY_PATH', '/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils/lib:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner/lib:/home/aluno/ws_moveit2/install/moveit_visual_tools/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_core/lib:/home/aluno/ws_moveit2/install/moveit_ros_control_interface/lib:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager/lib:/home/aluno/ws_moveit2/install/moveit_setup_assistant/lib:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_controllers/lib:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins/lib:/home/aluno/ws_moveit2/install/moveit_setup_framework/lib:/home/aluno/ws_moveit2/install/moveit_servo/lib:/home/aluno/ws_moveit2/install/moveit_ros_visualization/lib:/home/aluno/ws_moveit2/install/moveit_hybrid_planning/lib:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface/lib:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks/lib:/home/aluno/ws_moveit2/install/moveit_ros_warehouse/lib:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction/lib:/home/aluno/ws_moveit2/install/moveit_ros_perception/lib:/home/aluno/ws_moveit2/install/moveit_ros_move_group/lib:/home/aluno/ws_moveit2/install/moveit_planners_ompl/lib:/home/aluno/ws_moveit2/install/moveit_ros_planning/lib:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor/lib:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin/lib:/home/aluno/ws_moveit2/install/moveit_planners_chomp/lib:/home/aluno/ws_moveit2/install/moveit_kinematics/lib:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter/lib:/home/aluno/ws_moveit2/install/chomp_motion_planner/lib:/home/aluno/ws_moveit2/install/moveit_core/lib:/home/aluno/ws_moveit2/install/srdfdom/lib:/home/aluno/ws_moveit2/install/rviz_marker_tools/lib:/home/aluno/ws_moveit2/install/rosparam_shortcuts/lib:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/aluno'), ('KDE_APPLICATIONS_AS_SCOPE', '1'), ('OLDPWD', '/home/aluno'), ('LESS', '-R'), ('DESKTOP_SESSION', 'plasma'), ('ZSH', '/home/aluno/.oh-my-zsh'), ('LSCOLORS', 'Gxfxcxdxbxegedabagacad'), ('GTK_RC_FILES', '/etc/gtk/gtkrc:/home/aluno/.gtkrc:/home/aluno/.config/gtkrc'), ('KCRASH_DUMP_ONLY', '1'), ('KDE_SESSION_VERSION', '5'), ('SHELL_SESSION_ID', 'e95bcf0d3b734ab398b1cff3a7b0c13d'), ('XDG_SEAT_PATH', '/org/freedesktop/DisplayManager/Seat0'), ('ROS_PYTHON_VERSION', '3'), ('PAGER', 'less'), ('KONSOLE_DBUS_SESSION', '/Sessions/1'), ('LC_CTYPE', 'pt_BR.UTF-8'), ('LC_MONETARY', 'pt_BR.UTF-8'), ('MANAGERPID', '1237'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('SYSTEMD_EXEC_PID', '1427'), ('COLORTERM', 'truecolor'), ('KONSOLE_DBUS_WINDOW', '/Windows/1'), ('QT_EXCLUDE_GENERIC_BEARER', '1'), ('ROS_DISTRO', 'humble'), ('COLCON_PREFIX_PATH', '/home/aluno/test_ws/install:/home/aluno/ws_moveit2/install'), ('LOGNAME', 'aluno'), ('JOURNAL_STREAM', '8:28996'), ('QT_AUTO_SCREEN_SCALE_FACTOR', '0'), ('WINDOWID', '62914573'), ('_', '/home/aluno/.local/bin/colcon'), ('COLORFGBG', '15;0'), ('XDG_SESSION_CLASS', 'user'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '3'), ('ROS_LOCALHOST_ONLY', '0'), ('GTK2_RC_FILES', '/etc/gtk-2.0/gtkrc:/home/aluno/.gtkrc-2.0:/home/aluno/.config/gtkrc-2.0'), ('PATH', '/home/aluno/ws_moveit2/install/moveit_core/bin:/opt/ros/humble/bin:/home/aluno/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('INVOCATION_ID', 'd537385cf4a14d57b4f5e244da1d53e1'), ('LC_ADDRESS', 'pt_BR.UTF-8'), ('XCURSOR_THEME', 'breeze_cursors'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('XDG_SESSION_PATH', '/org/freedesktop/DisplayManager/Session1'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('LC_TELEPHONE', 'pt_BR.UTF-8'), ('XDG_CURRENT_DESKTOP', 'KDE'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('MOZ_USE_XINPUT2', '1'), ('XAUTHORITY', '/tmp/xauth_qAxEzU'), ('XDG_SESSION_DESKTOP', 'KDE'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/tmp/ssh-XXXXXXMFivXI/agent.1251'), ('AMENT_PREFIX_PATH', '/home/aluno/test_ws/install/lc_start:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils:/home/aluno/ws_moveit2/install/moveit_runtime:/home/aluno/ws_moveit2/install/moveit2_tutorials:/home/aluno/ws_moveit2/install/moveit:/home/aluno/ws_moveit2/install/moveit_planners:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner:/home/aluno/ws_moveit2/install/moveit_visual_tools:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities:/home/aluno/ws_moveit2/install/moveit_task_constructor_core:/home/aluno/ws_moveit2/install/moveit_ros_control_interface:/home/aluno/ws_moveit2/install/moveit_plugins:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager:/home/aluno/ws_moveit2/install/moveit_setup_assistant:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins:/home/aluno/ws_moveit2/install/moveit_setup_controllers:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins:/home/aluno/ws_moveit2/install/moveit_setup_framework:/home/aluno/ws_moveit2/install/moveit_servo:/home/aluno/ws_moveit2/install/moveit_ros:/home/aluno/ws_moveit2/install/moveit_ros_visualization:/home/aluno/ws_moveit2/install/moveit_hybrid_planning:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks:/home/aluno/ws_moveit2/install/moveit_ros_warehouse:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction:/home/aluno/ws_moveit2/install/moveit_ros_perception:/home/aluno/ws_moveit2/install/moveit_resources_prbt_pg70_support:/home/aluno/ws_moveit2/install/moveit_resources_prbt_moveit_config:/home/aluno/ws_moveit2/install/moveit_ros_move_group:/home/aluno/ws_moveit2/install/moveit_planners_ompl:/home/aluno/ws_moveit2/install/moveit_ros_planning:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin:/home/aluno/ws_moveit2/install/moveit_planners_chomp:/home/aluno/ws_moveit2/install/moveit_kinematics:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter:/home/aluno/ws_moveit2/install/chomp_motion_planner:/home/aluno/ws_moveit2/install/moveit_core:/home/aluno/ws_moveit2/install/moveit_configs_utils:/home/aluno/ws_moveit2/install/srdfdom:/home/aluno/ws_moveit2/install/rviz_marker_tools:/home/aluno/ws_moveit2/install/rosparam_shortcuts:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs:/home/aluno/ws_moveit2/install/moveit_resources_prbt_support:/home/aluno/ws_moveit2/install/moveit_resources:/home/aluno/ws_moveit2/install/moveit_resources_pr2_description:/home/aluno/ws_moveit2/install/moveit_resources_panda_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_panda_description:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_description:/home/aluno/ws_moveit2/install/moveit_common:/home/aluno/ws_moveit2/install/launch_param_builder:/opt/ros/humble'), ('LC_NAME', 'pt_BR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('COLCON_WS', '/home/aluno/ws_moveit2'), ('KDE_FORK_SLAVES', '1'), ('KONSOLE_DBUS_SERVICE', ':1.354'), ('LC_MEASUREMENT', 'pt_BR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'pt_BR.UTF-8'), ('XDG_VTNR', '2'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/aluno/test_ws/build/lc_start'), ('XDG_CONFIG_DIRS', '/home/aluno/.config/kdedefaults:/etc/xdg/xdg-plasma:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/plasma:/home/aluno/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('LC_NUMERIC', 'pt_BR.UTF-8'), ('PYTHONPATH', '/home/aluno/ws_moveit2/install/moveit_configs_utils/lib/python3.10/site-packages:/home/aluno/ws_moveit2/install/srdfdom/local/lib/python3.10/dist-packages:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs/local/lib/python3.10/dist-packages:/home/aluno/ws_moveit2/install/launch_param_builder/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('KDE_SESSION_UID', '1000'), ('LC_PAPER', 'pt_BR.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/aluno/test_ws/install/lc_start:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner_testutils:/home/aluno/ws_moveit2/install/moveit_runtime:/home/aluno/ws_moveit2/install/moveit2_tutorials:/home/aluno/ws_moveit2/install/moveit:/home/aluno/ws_moveit2/install/moveit_planners:/home/aluno/ws_moveit2/install/pilz_industrial_motion_planner:/home/aluno/ws_moveit2/install/moveit_visual_tools:/home/aluno/ws_moveit2/install/moveit_task_constructor_visualization:/home/aluno/ws_moveit2/install/moveit_task_constructor_demo:/home/aluno/ws_moveit2/install/moveit_task_constructor_capabilities:/home/aluno/ws_moveit2/install/moveit_task_constructor_core:/home/aluno/ws_moveit2/install/moveit_ros_control_interface:/home/aluno/ws_moveit2/install/moveit_plugins:/home/aluno/ws_moveit2/install/moveit_simple_controller_manager:/home/aluno/ws_moveit2/install/moveit_setup_assistant:/home/aluno/ws_moveit2/install/moveit_setup_srdf_plugins:/home/aluno/ws_moveit2/install/moveit_setup_core_plugins:/home/aluno/ws_moveit2/install/moveit_setup_controllers:/home/aluno/ws_moveit2/install/moveit_setup_app_plugins:/home/aluno/ws_moveit2/install/moveit_setup_framework:/home/aluno/ws_moveit2/install/moveit_servo:/home/aluno/ws_moveit2/install/moveit_ros:/home/aluno/ws_moveit2/install/moveit_ros_visualization:/home/aluno/ws_moveit2/install/moveit_hybrid_planning:/home/aluno/ws_moveit2/install/moveit_ros_planning_interface:/home/aluno/ws_moveit2/install/moveit_ros_benchmarks:/home/aluno/ws_moveit2/install/moveit_ros_warehouse:/home/aluno/ws_moveit2/install/moveit_ros_robot_interaction:/home/aluno/ws_moveit2/install/moveit_ros_perception:/home/aluno/ws_moveit2/install/moveit_resources_prbt_pg70_support:/home/aluno/ws_moveit2/install/moveit_resources_prbt_moveit_config:/home/aluno/ws_moveit2/install/moveit_ros_move_group:/home/aluno/ws_moveit2/install/moveit_planners_ompl:/home/aluno/ws_moveit2/install/moveit_ros_planning:/home/aluno/ws_moveit2/install/moveit_ros_occupancy_map_monitor:/home/aluno/ws_moveit2/install/moveit_resources_prbt_ikfast_manipulator_plugin:/home/aluno/ws_moveit2/install/moveit_planners_chomp:/home/aluno/ws_moveit2/install/moveit_kinematics:/home/aluno/ws_moveit2/install/moveit_chomp_optimizer_adapter:/home/aluno/ws_moveit2/install/chomp_motion_planner:/home/aluno/ws_moveit2/install/moveit_core:/home/aluno/ws_moveit2/install/srdfdom:/home/aluno/ws_moveit2/install/rviz_marker_tools:/home/aluno/ws_moveit2/install/rosparam_shortcuts:/home/aluno/ws_moveit2/install/moveit_task_constructor_msgs:/home/aluno/ws_moveit2/install/moveit_resources_prbt_support:/home/aluno/ws_moveit2/install/moveit_resources:/home/aluno/ws_moveit2/install/moveit_resources_pr2_description:/home/aluno/ws_moveit2/install/moveit_resources_panda_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_panda_description:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_moveit_config:/home/aluno/ws_moveit2/install/moveit_resources_fanuc_description:/home/aluno/ws_moveit2/install/moveit_common:/home/aluno/ws_moveit2/install/moveit_configs_utils:/home/aluno/ws_moveit2/install/launch_param_builder:/opt/ros/humble')]), 'shell': False}
[0.085237] (lc_start) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target listener\x1b[0m\n'}
[0.099831] (-) TimerEvent: {}
[0.100757] (lc_start) StdoutLine: {'line': b'[ 50%] Built target talker\n'}
[0.106190] (lc_start) StdoutLine: {'line': b'[ 75%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/sr_sub.cpp.o\x1b[0m\n'}
[0.199935] (-) TimerEvent: {}
[0.300224] (-) TimerEvent: {}
[0.400511] (-) TimerEvent: {}
[0.500797] (-) TimerEvent: {}
[0.601114] (-) TimerEvent: {}
[0.701408] (-) TimerEvent: {}
[0.801685] (-) TimerEvent: {}
[0.901965] (-) TimerEvent: {}
[1.002248] (-) TimerEvent: {}
[1.102592] (-) TimerEvent: {}
[1.202913] (-) TimerEvent: {}
[1.303199] (-) TimerEvent: {}
[1.403492] (-) TimerEvent: {}
[1.503787] (-) TimerEvent: {}
[1.604079] (-) TimerEvent: {}
[1.704361] (-) TimerEvent: {}
[1.804662] (-) TimerEvent: {}
[1.904958] (-) TimerEvent: {}
[2.005253] (-) TimerEvent: {}
[2.105552] (-) TimerEvent: {}
[2.205854] (-) TimerEvent: {}
[2.242986] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSubscriber::Subscriber()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.243662] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:17:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[2.243758] (lc_start) StderrLine: {'line': b'   17 |       "serial_read", 10, std::bind(&Subscriber::topic_callback, this, _1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[2.243827] (lc_start) StderrLine: {'line': b'      |                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.243890] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[2.243954] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:3\x1b[m\x1b[K:\n'}
[2.244015] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.244082] (lc_start) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[2.244143] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.244204] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.244265] (lc_start) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.244332] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.244397] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:17:74:\x1b[m\x1b[K   required from here\n'}
[2.244458] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.244630] (lc_start) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[2.244706] (lc_start) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.244768] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.244848] (lc_start) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[2.244910] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.244971] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.245032] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:17:74:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.245096] (lc_start) StderrLine: {'line': b'   17 |       "serial_read", 10, std::bind(&Subscriber::topic_callback, this, _1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[2.245156] (lc_start) StderrLine: {'line': b'      |                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.245216] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[2.245276] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:3\x1b[m\x1b[K:\n'}
[2.245336] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.245398] (lc_start) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[2.245458] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.245517] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.245577] (lc_start) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.245641] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.245712] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:17:74:\x1b[m\x1b[K   required from here\n'}
[2.245773] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.245839] (lc_start) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[2.245901] (lc_start) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.245961] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.246030] (lc_start) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[2.246096] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.246157] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.246217] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:17:74:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.246280] (lc_start) StderrLine: {'line': b'   17 |       "serial_read", 10, std::bind(&Subscriber::topic_callback, this, _1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[2.246340] (lc_start) StderrLine: {'line': b'      |                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[2.246398] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[2.246457] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:3\x1b[m\x1b[K:\n'}
[2.246516] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.246577] (lc_start) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[2.246643] (lc_start) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.246704] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.246787] (lc_start) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[2.246859] (lc_start) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.246917] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.246978] (lc_start) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[2.247036] (lc_start) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.247094] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.247162] (lc_start) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[2.247222] (lc_start) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.305964] (-) TimerEvent: {}
[2.406251] (-) TimerEvent: {}
[2.506533] (-) TimerEvent: {}
[2.606848] (-) TimerEvent: {}
[2.639643] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.639833] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.639948] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.640126] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.640409] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.640670] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.640742] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.640815] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.640883] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.640950] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.641011] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:5\x1b[m\x1b[K:\n'}
[2.641072] (lc_start) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.641138] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.641208] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.641289] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.641369] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.641438] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:16:80:\x1b[m\x1b[K   required from here\n'}
[2.641499] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[2.641599] (lc_start) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[2.641665] (lc_start) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.641726] (lc_start) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[2.641787] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[2.641847] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.641907] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.641967] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.642027] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.642086] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.642145] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.642205] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.642274] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.642334] (lc_start) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:5\x1b[m\x1b[K:\n'}
[2.642393] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.642485] (lc_start) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[2.642548] (lc_start) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.642607] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.642668] (lc_start) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.642778] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.642952] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643018] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643096] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643172] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643247] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643313] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:16:80:\x1b[m\x1b[K   required from here\n'}
[2.643377] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643437] (lc_start) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[2.643495] (lc_start) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.643552] (lc_start) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.643613] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643682] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643760] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643826] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::UInt8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.643898] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aluno/test_ws/src/lc_start/src/sr_sub.cpp:16:80:\x1b[m\x1b[K   required from here\n'}
[2.643958] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.644037] (lc_start) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[2.644097] (lc_start) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.644155] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.644242] (lc_start) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[2.644303] (lc_start) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.644362] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.644436] (lc_start) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[2.644510] (lc_start) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.644571] (lc_start) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::_Bind<void (Subscriber::*(Subscriber*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >) const>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::String_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::UInt8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::UInt8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.644666] (lc_start) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[2.644725] (lc_start) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.706942] (-) TimerEvent: {}
[2.807234] (-) TimerEvent: {}
[2.907525] (-) TimerEvent: {}
[3.007815] (-) TimerEvent: {}
[3.108107] (-) TimerEvent: {}
[3.208400] (-) TimerEvent: {}
[3.308691] (-) TimerEvent: {}
[3.408989] (-) TimerEvent: {}
[3.509296] (-) TimerEvent: {}
[3.609595] (-) TimerEvent: {}
[3.709898] (-) TimerEvent: {}
[3.810198] (-) TimerEvent: {}
[3.910496] (-) TimerEvent: {}
[4.010823] (-) TimerEvent: {}
[4.111126] (-) TimerEvent: {}
[4.211409] (-) TimerEvent: {}
[4.275886] (lc_start) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/listener.dir/build.make:76: CMakeFiles/listener.dir/src/sr_sub.cpp.o] Error 1\n'}
[4.276228] (lc_start) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/listener.dir/all] Error 2\n'}
[4.276366] (lc_start) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[4.278175] (lc_start) CommandEnded: {'returncode': 2}
[4.311503] (-) TimerEvent: {}
[4.354312] (lc_start) JobEnded: {'identifier': 'lc_start', 'rc': 2}
[4.364716] (-) EventReactorShutdown: {}
